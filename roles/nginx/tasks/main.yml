- name: "Create nginx user"
  user: name={{ nginx_user }} group={{ webserver_group }} shell='/bin/false'

- name: "Download nginx and 3rd party tar.gz modules"
  get_url: url={{ item.value }} dest={{ tmp_dir }}{{ item.key }}.tar.gz
  with_dict: download_tars

- name: "Untar 3rd party module tar.gz files"
  unarchive: copy=no src={{ tmp_dir }}{{ item.key }}.tar.gz dest={{ tmp_dir }}
  with_dict: download_tars

- name: "Download 3rd party zip modules"
  get_url: url={{ item.value }} dest={{ tmp_dir }}{{ item.key }}.zip
  with_dict: download_zips

- name: "Unzip 3rd party zip modules"
  unarchive: copy=no src={{ tmp_dir }}{{ item.key }}.zip dest={{ tmp_dir }}
  with_dict: download_zips

- name: "Download PSOL into Pagespeed module"
  get_url: url={{ psol_url }} dest={{ tmp_dir }}{{ pagespeed_dir }}

- name: "Untar PSOL"
  unarchive: copy=no src={{ tmp_dir }}{{ pagespeed_dir }}{{ pagespeed_version }}.tar.gz dest={{ tmp_dir }}{{ pagespeed_dir }}

- name: "Configure Nginx"
  command: ./configure --prefix=/etc/nginx --sbin-path=/usr/sbin --with-http_stub_status_module --with-http_realip_module --with-http_gzip_static_module --with-http_flv_module --with-http_geoip_module --with-http_mp4_module --with-http_ssl_module --add-module=../headers-more-nginx-module-master --add-module=../ngx_pagespeed-release-{{ pagespeed_version }}-beta --add-module=../ngx_cache_purge-master chdir={{ tmp_dir }}/nginx-{{ nginx_version }}

- name: "Make Nginx"
  command: make chdir={{ tmp_dir }}/nginx-{{ nginx_version }}

- name: "Install Nginx"
  command: make install chdir={{ tmp_dir }}/nginx-{{ nginx_version }}

- name: "Create pagespeed cache dir"
  file: state=directory path={{ pagespeed_cache_dir }} owner={{ nginx_user }} group={{ webserver_group }}

- name: "Create nginx log dir"
  file: state=directory path={{ nginx_log_dir }} owner={{ nginx_user }} group={{ webserver_group }}

- name: "Create nginx include dirs"
  file: state=directory path={{ item }}
  with_items: nginx_include_dirs

- name: "Create nginx init script"
  copy: src='nginx.init' dest='/etc/init.d/nginx' mode=744

- name: "Create nginx conf"
  template: src='nginx.conf.j2' dest={{ nginx_conf_dir }}nginx.conf backup=yes 

- name: "Ensure Nginx Starts On Boot"
  service: name=nginx enabled=yes
